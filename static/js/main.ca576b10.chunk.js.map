{"version":3,"sources":["components/Home.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Home","style","marginTop","to","pathname","mode","className","items","cells","visited","render","Game","props","React","useState","CreateBoard","board","i","a","j","push","count","k","Math","floor","random","x","y","isValid","sodokoSolver","data","gameboard","item","setItem","location","length","row","col","m","n","Check","e","target","value","focus","alert","setAttribute","fixed","v","undefined","key","toString","type","maxLength","size","onChange","disabled","l","width","textAlign","id","display","margin","marginLeft","height","padding","onClick","window","reload","table","document","getElementById","flag","sol_flag","solution","rows","children","parseInt","error","it","c","cell","defaultValue","background","ErrorBoard","history","goBack","withRouter","path","exact","component","Boolean","hostname","match","ReactDOM","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.ca576b10.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<h1 style={{marginTop:'15%'}}>Sudoku Game</h1>\r\n\t\t\t<p>Click the button to play a New Game</p>\r\n\t\t\t<Link to={{pathname:'/game',mode:\"Very Easy\"}}><button className=\"button\">Very Easy</button></Link>\r\n\t\t\t<Link to={{pathname:'/game',mode:\"Easy\"}}><button className=\"button\">Easy</button></Link>\r\n\t\t\t<Link to={{pathname:'/game',mode:\"Medium\"}}><button className=\"button\">Medium</button></Link>\r\n\t\t\t<Link to={{pathname:'/game',mode:\"Hard\"}}><button className=\"button\">Hard</button></Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nvar items = []\r\nvar cells = []\r\nvar visited = []\r\nvar mode = \"\"\r\nvar render = 0\r\nconst Game = (props) => {\r\n\tconst [gameboard,setBoard] = React.useState(CreateBoard())\r\n\tconst [item,setItem] = React.useState([])\r\n\r\n\tconst NewGame = () => {\r\n\t\twindow.location.reload()\r\n\t}\r\n\r\n\tif(mode!=props.location.mode){\r\n\t\trender=0\r\n\t\titems.length=0\r\n\t\tcells.length=0\r\n\t\tvisited.length=0\r\n\t}\r\n\r\n\tconst CheckGame = () => {\r\n\t\tvar table = document.getElementById(\"gametable\")\r\n\t\tvar flag = 0\r\n\t\tvar sol_flag = 0\r\n\t\tvar solution = []\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar k = []\r\n\t\t\tfor (var j = 0; j < 9; j++) {\r\n\t\t\t\tif(table.rows[i].cells[j].children[0].value){\r\n\t\t\t\t\tk.push(parseInt(table.rows[i].cells[j].children[0].value))\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(\"Incomplete. Please Complete the Game.\")\r\n\t\t\t\t\tflag=1\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(flag === 1){\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tsolution.push(k)\r\n\t\t}\r\n\t\tif(flag==0){\r\n\t\t\tvar error = []\r\n\t\t\tfor(var m=0;m<9;m++){\r\n\t\t\t\tfor(var l=0;l<9;l++){\r\n\t\t\t\t\tif(solution[m][l]!=gameboard[m][l]){\r\n\t\t\t\t\t\tsol_flag = 1\r\n\t\t\t\t\t\terror.push([m,l])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tErrorBoard(error,solution)\r\n\t\t\tif(sol_flag==0){\r\n\t\t\t\talert(\"Correct Solution\")\r\n\t\t\t\tprops.history.push(\"/\")\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\talert(\"Wrong Solution. Try Again.\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ErrorBoard(error,solution){\r\n\t\tvar it = []\r\n\t\tvar c = []\r\n\t\tvar flag = 0\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar cell = []\r\n\t\t\tfor (var j = 0; j < 9; j++) {\r\n\t\t\t\tif(items[i].props.children[j].props.children.props.disabled == true){\r\n\t\t\t\t\tcell.push(<td key={i.toString() + j.toString()}><input type='text' maxLength='1' size='1' value={solution[i][j]} onChange={Check} disabled/></td>)\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\tflag=0\r\n\t\t\t\t\tfor(var l=0;l<error.length;l++){\r\n\t\t\t\t\t\tif(error[l][0]==i && error[l][1]==j){\r\n\t\t\t\t\t\t\tflag=1\r\n\t\t\t\t\t\t\tcell.push(<td key={i.toString() + j.toString()}><input type='text' maxLength='1' size='1' defaultValue={solution[i][j]} onChange={Check} style={{background:\"red\"}}/></td>)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(flag==0){\r\n\t\t\t\t\t\tcell.push(<td key={i.toString() + j.toString()}><input type='text' maxLength='1' size='1' defaultValue={solution[i][j]} onChange={Check} style={{background:\"green\"}}/></td>)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc.push(cell)\r\n\t\t}\r\n\t\tfor(var k=0;k<9;k++){\r\n\t\t\tit.push(<tr key={k}>{c[k]}</tr>)\r\n\t\t}\r\n\t\tsetItem(it)\r\n\t}\r\n\r\n\tfunction CreateBoard() {\r\n\t\tvar board = []\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar a=[]\r\n\t\t\tfor (var j = 0; j < 9; j++) {\r\n\t\t\t\ta.push(0)\r\n\t\t\t}\r\n\t\t\tboard.push(a)\r\n\t\t}\r\n\t\tvar count = 0\r\n\t\twhile(count<20){\r\n\t\t\tlet k = Math.floor(Math.random() * 9) + 1\r\n\t\t\tlet x = Math.floor(Math.random() * 9)\r\n\t\t\tlet y = Math.floor(Math.random() * 9)\r\n\t\t\tif(board[x][y] === 0){\r\n\t\t\t\tif(isValid(board,x,y,k)){\r\n\t\t\t\t\tboard[x][y] = k\r\n\t\t\t\t\tcount += 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(sodokoSolver(board)===false){\r\n\t\t\tvar b = CreateBoard()\r\n\t\t\treturn b\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn board\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isValid(board, row, col, k) {\r\n\t    for (let i = 0; i < 9; i++) {\r\n\t        const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n\t        const n = 3 * Math.floor(col / 3) + i % 3;\r\n\t        if (board[row][i] === k || board[i][col] === k || board[m][n] === k) {\r\n\t          return false;\r\n\t        }\r\n\t    }\r\n\t    return true;\r\n\t}\r\n\r\n\r\n\tfunction sodokoSolver(data) {\r\n\t  for (let i = 0; i < 9; i++) {\r\n\t    for (let j = 0; j < 9; j++) {\r\n\t      if (data[i][j] === 0) {\r\n\t        for (let k = 1; k <= 9; k++) {\r\n\t          if (isValid(data, i, j, k)) {\r\n\t            data[i][j] = k;\r\n\t          if (sodokoSolver(data)) {\r\n\t           return data;\r\n\t          } else {\r\n\t           data[i][j] = 0;\r\n\t          }\r\n\t         }\r\n\t       }\r\n\t       return false;\r\n\t     }\r\n\t   }\r\n\t }\r\n\t return data;\r\n\t}\r\n\r\n\tconst Check = (e) => {\r\n\t\tif((e.target.value < \"1\" || e.target.value > \"9\" ) && e.target.value.length !== 0){\r\n\t\t\te.target.value = \"\"\r\n\t\t\te.target.focus()\r\n\t\t\talert(\"Only Numbers[1-9] are Allowed\")\r\n\t\t}\r\n\t\te.target.setAttribute(\"style\",\"background:white\")\r\n\t}\r\n\r\n\tif(items.length===0 || render===0){\r\n\t\tvar count = 0\r\n\t\tvar fixed = 0\r\n\t\tfor (var k = 0; k < 9; k++) {\r\n\t\t\tvar v = []\r\n\t\t\tfor (var m = 0; m < 9; m++) {\r\n\t\t\t\tv.push(0)\r\n\t\t\t}\r\n\t\t\tvisited.push(v)\r\n\t\t}\r\n\t\tmode = props.location.mode\r\n\t\tif(props.location.mode===\"Hard\"){\r\n\t\t\tfixed = 29\r\n\t\t}\r\n\t\telse if(props.location.mode===\"Medium\"){\r\n\t\t\tfixed = 34\r\n\t\t}\r\n\t\telse if(props.location.mode===\"Easy\" || props.location.mode===undefined){\r\n\t\t\tfixed = 39\r\n\t\t}\r\n\t\telse if(props.location.mode===\"Very Easy\"){\r\n\t\t\tfixed = 45\r\n\t\t}\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar row = []\r\n\t\t\tfor(var j=0; j < 9; j++){\r\n\t\t\t\tif(count<fixed && Math.random()>0.65 && visited[i][j]===0){\r\n\t\t\t\t\trow.push(<td key={i.toString()+j.toString()}><input type='text' maxLength='1' size='1' value={gameboard[i][j]} onChange={Check} disabled/></td>)\r\n\t\t\t\t\tcount = count + 1\r\n\t\t\t\t\tvisited[i][j]=1\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\trow.push(<td key={i.toString()+j.toString()}><input type='text' maxLength='1' size='1' onChange={Check}/></td>)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcells.push(row)\r\n\t\t}\r\n\t\twhile(count<fixed){\r\n\t\t\tlet x = Math.floor(Math.random() * 9)\r\n\t\t\tlet y = Math.floor(Math.random() * 9)\r\n\t\t\tif(visited[x][y]===0){\r\n\t\t\t\tvisited[x][y]=1\r\n\t\t\t\tcells[x][y] = <td key={x.toString()+y.toString()}><input type='text' maxLength='1' size='1' value={gameboard[x][y]} onChange={Check} disabled/></td>\r\n\t\t\t\tcount+=1\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var l=0;l<9;l++){\r\n\t\t\titems.push(<tr key={l}>{cells[l]}</tr>)\r\n\t\t}\r\n\t\tsetItem(items)\r\n\t\trender+=1\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Play Sudoku</h1>\r\n\t\t\t</div>\r\n\t\t\t<div style={{marginTop:'5%',width:\"100%\",textAlign:\"-webkit-center\"}}>\r\n\t\t\t\t<table id=\"gametable\">\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<div style={{width:\"30%\",marginTop:\"5%\",display:\"flex\",margin:\"5% auto\", marginLeft:\"43%\"}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className=\"button\" style={{height:'100%',padding:\"5%\"}} onClick={NewGame}>New Game</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className=\"button\" style={{height:'100%',marginLeft:\"5%\",padding:\"5%\"}} onClick={CheckGame}>Check Solution</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<button className=\"button\" style={{height:'100%',marginLeft:\"5%\",padding:\"5%\"}} onClick={()=>props.history.goBack()}>Go Back</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport {Switch, Route, withRouter } from \"react-router-dom\";\nimport './App.css';\nimport Home from './components/Home';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/game\" exact component={Game} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}