{"version":3,"sources":["components/Home.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Home","style","marginTop","to","className","items","cells","visited","Game","props","React","useState","CreateBoard","board","i","a","j","push","count","k","Math","floor","random","x","y","isValid","sodokoSolver","data","gameboard","item","setItem","row","col","m","n","Check","e","target","value","length","focus","alert","v","type","maxlength","size","onChange","disabled","l","margin","width","display","id","float","height","padding","onClick","window","location","reload","marginLeft","table","document","getElementById","flag","sol_flag","solution","rows","children","parseInt","withRouter","path","exact","component","Boolean","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a82c750a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<h1 style={{marginTop:'15%'}}>Sudoku Game</h1>\r\n\t\t\t<p>Click the button to play a New Game</p>\r\n\t\t\t<Link to='/game'><button className=\"button\">New Game</button></Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nvar items = []\r\nvar cells = []\r\nvar visited = []\r\nconst Game = (props) => {\r\n\tconst [gameboard,setBoard] = React.useState(CreateBoard())\r\n\tconst [item,setItem] = React.useState([])\r\n\r\n\tconst NewGame = () => {\r\n\t\twindow.location.reload(false);\r\n\t}\r\n\r\n\tconst CheckGame = () => {\r\n\t\tvar table = document.getElementById(\"gametable\")\r\n\t\tvar flag = 0\r\n\t\tvar sol_flag = 0\r\n\t\tvar solution = []\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar k = []\r\n\t\t\tfor (var j = 0; j < 9; j++) {\r\n\t\t\t\tif(table.rows[i].cells[j].children[0].value){\r\n\t\t\t\t\tk.push(parseInt(table.rows[i].cells[j].children[0].value))\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\talert(\"Incomplete. Please Complete the Game.\")\r\n\t\t\t\t\tflag=1\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(flag === 1){\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t\tsolution.push(k)\r\n\t\t}\r\n\t\tif(flag==0){\r\n\t\t\tfor(var m=0;m<9;m++){\r\n\t\t\t\tfor(var l=0;l<9;l++){\r\n\t\t\t\t\tif(solution[m][l]!=gameboard[m][l]){\r\n\t\t\t\t\t\talert(\"Wrong Solution. Try Again.\")\r\n\t\t\t\t\t\tsol_flag = 1\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(sol_flag==1){\r\n\t\t\t\t\tbreak\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(sol_flag==0){\r\n\t\t\t\talert(\"Correct Solution\")\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction CreateBoard() {\r\n\t\tvar board = []\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar a=[]\r\n\t\t\tfor (var j = 0; j < 9; j++) {\r\n\t\t\t\ta.push(0)\r\n\t\t\t}\r\n\t\t\tboard.push(a)\r\n\t\t}\r\n\t\tvar count = 0\r\n\t\twhile(count<20){\r\n\t\t\tlet k = Math.floor(Math.random() * 9) + 1\r\n\t\t\tlet x = Math.floor(Math.random() * 9)\r\n\t\t\tlet y = Math.floor(Math.random() * 9)\r\n\t\t\tif(board[x][y] === 0){\r\n\t\t\t\tif(isValid(board,x,y,k)){\r\n\t\t\t\t\tboard[x][y] = k\r\n\t\t\t\t\tcount += 1\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(sodokoSolver(board)===false){\r\n\t\t\tvar b = CreateBoard()\r\n\t\t\treturn b\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn board\r\n\t\t}\r\n\t}\r\n\r\n\tfunction isValid(board, row, col, k) {\r\n\t    for (let i = 0; i < 9; i++) {\r\n\t        const m = 3 * Math.floor(row / 3) + Math.floor(i / 3);\r\n\t        const n = 3 * Math.floor(col / 3) + i % 3;\r\n\t        if (board[row][i] === k || board[i][col] === k || board[m][n] === k) {\r\n\t          return false;\r\n\t        }\r\n\t    }\r\n\t    return true;\r\n\t}\r\n\r\n\r\n\tfunction sodokoSolver(data) {\r\n\t  for (let i = 0; i < 9; i++) {\r\n\t    for (let j = 0; j < 9; j++) {\r\n\t      if (data[i][j] === 0) {\r\n\t        for (let k = 1; k <= 9; k++) {\r\n\t          if (isValid(data, i, j, k)) {\r\n\t            data[i][j] = k;\r\n\t          if (sodokoSolver(data)) {\r\n\t           return data;\r\n\t          } else {\r\n\t           data[i][j] = 0;\r\n\t          }\r\n\t         }\r\n\t       }\r\n\t       return false;\r\n\t     }\r\n\t   }\r\n\t }\r\n\t return data;\r\n\t}\r\n\r\n\tconst Check = (e) => {\r\n\t\tif((e.target.value < \"1\" || e.target.value > \"9\" ) && e.target.value.length !== 0){\r\n\t\t\te.target.value = \"\"\r\n\t\t\te.target.focus()\r\n\t\t\talert(\"Only Numbers[1-9] are Allowed\")\r\n\t\t}\r\n\t}\r\n\r\n\tif(items.length===0){\r\n\t\tvar count = 0\r\n\t\tfor (var k = 0; k < 9; k++) {\r\n\t\t\tvar v = []\r\n\t\t\tfor (var m = 0; m < 9; m++) {\r\n\t\t\t\tv.push(0)\r\n\t\t\t}\r\n\t\t\tvisited.push(v)\r\n\t\t}\r\n\t\tfor (var i = 0; i < 9; i++) {\r\n\t\t\tvar row = []\r\n\t\t\tfor(var j=0; j < 9; j++){\r\n\t\t\t\tif(count<25 && Math.random()>0.65 && visited[i][j]===0){\r\n\t\t\t\t\trow.push(<td><input type='text' maxlength='1' size='1' value={gameboard[i][j]} onChange={Check} disabled/></td>)\r\n\t\t\t\t\tcount = count + 1\r\n\t\t\t\t\tvisited[i][j]=1\r\n\t\t\t\t}\r\n\t\t\t\telse{\r\n\t\t\t\t\trow.push(<td><input type='text' maxlength='1' size='1' onChange={Check}/></td>)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcells.push(row)\r\n\t\t}\r\n\t\twhile(count<25){\r\n\t\t\tlet x = Math.floor(Math.random() * 9)\r\n\t\t\tlet y = Math.floor(Math.random() * 9)\r\n\t\t\tif(visited[x][y]===0){\r\n\t\t\t\tvisited[x][y]=1\r\n\t\t\t\tcells[x][y] = <td><input type='text' maxlength='1' size='1' value={gameboard[x][y]} onChange={Check} disabled/></td>\r\n\t\t\t\tcount+=1\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var l=0;l<9;l++){\r\n\t\t\titems.push(<tr>{cells[l]}</tr>)\r\n\t\t}\r\n\t\tsetItem(items)\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<h1>Play Sudoku</h1>\r\n\t\t\t</div>\r\n\t\t\t<div style={{margin:'7% auto',width:\"70%\",display:\"flex\"}}>\r\n\t\t\t\t<div style={{width:\"70%\"}}>\r\n\t\t\t\t<table id=\"gametable\">\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{width:\"30%\",marginTop:\"10%\"}}>\r\n\t\t\t\t\t<div style={{float:\"left\"}}>\r\n\t\t\t\t\t\t<button className=\"button\" style={{height:'fit-content',padding:\"5%\"}} onClick={NewGame}>New Game</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{float:\"left\"}}>\r\n\t\t\t\t\t\t<button className=\"button\" style={{height:'fit-content',marginLeft:\"5%\",padding:\"5%\"}} onClick={CheckGame}>Check Solution</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Game;","import React from 'react';\nimport {Switch, Route, withRouter } from \"react-router-dom\";\nimport './App.css';\nimport Home from './components/Home';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/game\" exact component={Game} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`}>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}